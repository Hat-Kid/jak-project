;;-*-Lisp-*-
(in-package goal)

;; name: target-h.gc
;; name in dgo: target-h
;; dgos: GAME

;; +++target-flags
(defenum target-flags
  :type uint32
  :bitfield #t
  (tf0 0)
  (tf1 1)
  (tf2 2)
  (tinvuln1 3)
  (tf4 4)
  (tf5 5)
  (tf6 6)
  (prevent-jump 7)
  (prevent-attack 8)
  (prevent-duck 9)
  (tf10 10)
  (tf11 11)
  (tf12 12)
  (tf13 13)
  (tf14 14)
  (tf15 15)
  (tf16 16)
  (prevent-board 17)
  (prevent-gun 18)
  (lleg-still 19)
  (rleg-still 20)
  (lleg-no-ik 21)
  (rleg-no-ik 22)
  (prevent-double-jump 23)
  (disable-attacks 24)
  (tinvuln2 25)
  (tf26 26)
  (tf27 27)
  (invisible 28)
  (tf29 29)
  (tf30 30)
  (tf31 31)
  )
;; ---target-flags


;; +++darkjak-stage
(defenum darkjak-stage
  :bitfield #t
  :type uint32
  (force-on)
  (active)
  (bomb0)
  (bomb1)
  (invinc)
  (giant)
  (no-anim)
  (disable-force-on)
  )
;; ---darkjak-stage


(declare-type rigid-body-impact structure)
(declare-type sidekick process-drawable)
(declare-type racer-info basic)
(declare-type tube-info basic)
(declare-type flut-info basic)
(declare-type board-info basic)
(declare-type pilot-info basic)
(declare-type gun-info basic)
(declare-type mech-info basic)
(declare-type turret-info basic)
(declare-type indax-info basic)
(declare-type ladder-info basic)
(declare-type darkjak-info basic)
(declare-type lightjak-info basic)

;; target-util
(define-extern target-pos (function int vector))
(define-extern can-exit-duck? (function target symbol))
(define-extern target-collide-set! (function symbol float int :behavior target))
(define-extern target-move-dist (function time-frame float :behavior target))
(define-extern get-intersect-point (function vector touching-prims-entry collide-shape touching-shapes-entry vector))
(define-extern target-update-segs (function process-drawable none))

;; logic-target
(define-extern target-darkjak-setup (function symbol none :behavior target))
(define-extern target-lightjak-setup (function symbol none :behavior target))
(define-extern target-sidekick-setup (function symbol none :behavior target))
(define-extern target-board-setup (function symbol none :behavior target))
(define-extern target-board-joint-points (function none :behavior target))
(define-extern target-gun-setup (function symbol none :behavior target))
(define-extern target-gun-joint-pre (function none :behavior target))
(define-extern target-gun-joint-points (function none :behavior target))
(define-extern target-powerup-process (function none :behavior target))
(define-extern target-generic-event-handler (function process int symbol event-message-block object :behavior target))
(define-extern target-exit (function none :behavior target))
(define-extern activate-hud (function target none))
(define-extern *target-geo-control* external-art-buffer)
(define-extern *target-anim-control* external-art-buffer)

;; target-handler
(define-extern target-gun-end-mode (function symbol symbol :behavior target))
(define-extern target-powerup-effect (function symbol none :behavior target))
(define-extern target-gun-type-set! (function pickup-type none :behavior target))
(define-extern vehicle-spawn (function process type traffic-object-spawn-params process-drawable))
(define-extern target-gun-init (function pickup-type none :behavior target))
(define-extern target-invisible-stop (function none :behavior target))
(define-extern target-gun-fire (function pickup-type none :behavior target))

;; target-anim
(define-extern *attack-end-mods* surface)

;; target
(define-extern want-to-powerjak? (function symbol :behavior target))
(define-extern target-invisible-start (function none :behavior target))
(define-extern target-top-anim-base-mode (function int none :behavior target))
(define-extern target-land-effect (function none :behavior target))
(define-extern *attack-find-mods* surface)
(define-extern *uppercut-mods* surface)
(define-extern *uppercut-jump-mods* surface)

;; target2

(define-extern *trip-mods* surface)
(define-extern *look-around-mods* surface)
(define-extern target-gun-check (function none :behavior target))
(define-extern target-darkjak-end-mode (function none :behavior target))
(define-extern target-lightjak-end-mode (function none :behavior target))
(define-extern want-to-gun? (function target symbol symbol :behavior process))
(define-extern *hit-ground-hard-mods* surface)
(define-extern *float-mods* surface)
(define-extern *blast-recover-mods* surface)

;; +++lightjak-stage
(defenum lightjak-stage
  :bitfield #t
  :type uint32
  (ls0 0)
  (ls1 1)
  (ls2 2)
  (ls3 3)
  (ls4 4)
  (ls5 5)
  (ls6 6)
  (ls7 7)
  (ls8 8)
  (ls9 9)
  (ls10 10)
  (ls11 11)
  (ls12 12)
  (ls13 13)
  (ls14 14)
  (ls15 15)
  )
;; ---lightjak-stage


;; DECOMP BEGINS

(deftype target (process-focusable)
  ((fact                         fact-info-target :override)
   (control                      control-info      :overlay-at root)
   (skel2                        joint-control)
   (shadow-backup                shadow-geo)
   (target-flags                 target-flags      :overlay-at state-flags)
   (game                         game-info)
   (neck                         joint-mod)
   (head                         joint-mod)
   (upper-body                   joint-mod)
   (horns                        joint-mod)
   (hair                         joint-mod         2)
   (arm-ik                       joint-mod-ik      2)
   (leg-ik                       joint-mod-ik      2)
   (foot                         joint-mod         2)
   (cloth                        symbol)
   (init-time                    time-frame)
   (teleport-time                time-frame)
   (state-hook-time              time-frame)
   (state-hook                   (function none :behavior target))
   (cam-user-mode                symbol)
   (sidekick                     (pointer sidekick))
   (manipy                       (pointer manipy))
   (mirror                       (pointer process-drawable))
   (attack-info                  attack-info       :inline)
   (attack-info-rec              attack-info       :inline)
   (attack-info-old              attack-info       8 :inline)
   (anim-seed                    uint64)
   (alt-cam-pos                  vector            :inline)
   (current-level                level)
   (saved-pos                    transformq        :inline)
   (saved-owner                  handle)
   (alt-neck-pos                 vector            :inline)
   (focus-search                 (array collide-shape))
   (handle-search                (array handle))
   (excitement                   float)
   (shock-effect-time            time-frame)
   (beard?                       symbol)
   (spool-anim                   spool-anim)
   (ambient-time                 time-frame)
   (fp-hud                       handle)
   (no-load-wait                 uint64)
   (no-look-around-wait          uint64)
   (burn-proc                    handle)
   (pre-joint-hook               (function none :behavior target))
   (notify                       handle)
   (death-resetter               resetter-spec     :inline)
   (mode-cache                   basic)
   (mode-param1                  uint64)
   (mode-param2                  uint64)
   (mode-param3                  uint64)
   (major-mode-exit-hook         basic)
   (major-mode-event-hook        basic)
   (sub-mode-exit-hook           basic)
   (ext-geo-control              external-art-buffer)
   (pending-ext-geo              int32)
   (ext-geo                      int32)
   (ext-anim-control             external-art-buffer)
   (pending-ext-anim             int32)
   (ext-anim                     int32)
   (tobot-state                  state)
   (tobot?                       symbol)
   (tobot-recorder               basic)
   (target-effect                uint64)
   (color-effect                 basic)
   (color-effect-start-time      time-frame)
   (color-effect-duration        time-frame)
   (racer                        racer-info)
   (tube                         tube-info)
   (flut                         flut-info)
   (board                        board-info)
   (pilot                        pilot-info)
   (gun                          gun-info)
   (mech                         mech-info)
   (turret                       turret-info)
   (indax                        indax-info)
   (ladder                       ladder-info)
   (darkjak-interp               float)
   (darkjak-interp-old           float)
   (darkjak-giant-interp         float)
   (darkjak                      darkjak-info)
   (lightjak-interp              float)
   (lightjak-interp-old          float)
   (lightjak                     lightjak-info)
   (scarf-interp-targ            float)
   (scarf-interp                 float)
   (scarf-interp-old             float)
   (goggles-interp-targ          float)
   (goggles-interp               float)
   (goggles-interp-old           float)
   (invisible-interp             float)
   (invisible-start-time         time-frame)
   (invisible-duration           time-frame)
   (invisible-shadow-dir-backup  vector            :inline)
   )
  (:methods
    (target-method-28 (_type_) none)
    (target-init! (_type_ continue-point symbol) none)
    )
  (:states
    target-attack
    (target-attack-air symbol)
    (target-attack-uppercut float float)
    (target-attack-uppercut-jump float float)
    (target-blast-recover rigid-body-impact)
    target-board-clone-anim
    target-board-duck-stance
    target-board-falling
    target-board-flip
    target-board-get-off
    target-board-get-on
    target-board-grab
    target-board-grenade
    target-board-halfpipe
    target-board-hit
    target-board-hit-ground
    target-board-hold
    target-board-jump
    target-board-jump-kick
    target-board-ride-edge
    target-board-stance
    (target-board-start handle)
    target-board-trickx
    target-board-tricky
    target-board-turn-around
    target-board-turn-to
    target-board-wall-kick
    target-carry-pickup
    (target-clone-anim handle)
    (target-continue continue-point)
    target-credits
    target-darkjak-bomb0
    target-darkjak-bomb1
    target-darkjak-get-off
    (target-darkjak-get-on darkjak-stage)
    target-darkjak-running-attack
    target-darkjak-smack
    target-darkjak-smack-charge
    target-death
    target-demo
    (target-double-jump float float)
    (target-duck-high-jump float float symbol)
    (target-duck-high-jump-jump float float symbol)
    (target-duck-stance symbol)
    (target-duck-walk symbol)
    (target-eco-powerup int float)
    target-edge-grab
    (target-edge-grab-jump float float symbol)
    target-edge-grab-off
    (target-falling symbol)
    target-float
    (target-flop float float float object)
    (target-flop-hit-ground symbol)
    target-flut-air-attack
    target-flut-air-attack-hit-ground
    target-flut-clone-anim
    target-flut-death
    target-flut-double-jump
    target-flut-eject
    target-flut-falling
    target-flut-get-off
    target-flut-get-off-jump
    target-flut-get-on
    target-flut-grab
    target-flut-hit
    target-flut-hit-ground
    target-flut-jump
    target-flut-kanga-catch
    target-flut-running-attack
    target-flut-stance
    (target-flut-start handle symbol int)
    target-flut-walk
    (target-grab symbol)
    (target-grab-ride handle)
    target-gun-stance
    target-gun-walk
    target-hide
    (target-high-jump float float object)
    (target-hit symbol attack-info)
    (target-hit-ground symbol)
    (target-hit-ground-hard float)
    target-ice-stance
    target-ice-walk
    target-indax-attack
    target-indax-attack-air
    target-indax-death
    target-indax-double-jump
    target-indax-falling
    target-indax-get-off
    target-indax-grab
    target-indax-hang
    target-indax-hit
    target-indax-hit-ground
    target-indax-jump
    target-indax-running-attack
    target-indax-stance
    (target-indax-start handle object)
    target-indax-trip
    target-indax-walk
    (target-invisible-get-on handle)
    (target-jump float float surface)
    (target-jump-forward float float)
    target-ladder
    (target-ladder-start handle)
    (target-launch float symbol vector int)
    target-launch-dir
    target-lightjak-freeze
    target-lightjak-get-off
    (target-lightjak-get-on lightjak-stage)
    (target-lightjak-regen int)
    target-lightjak-shield
    (target-lightjak-swoop float)
    target-lightjak-swoop-again
    target-lightjak-swoop-falling
    target-load-wait
    target-look-around
    target-mech-carry-drag
    target-mech-carry-drop
    target-mech-carry-falling
    target-mech-carry-hit-ground
    target-mech-carry-jump
    target-mech-carry-pickup
    target-mech-carry-stance
    target-mech-carry-throw
    target-mech-carry-walk
    target-mech-clone-anim
    target-mech-death
    target-mech-falling
    target-mech-get-off
    target-mech-get-on
    target-mech-get-up
    target-mech-grab
    target-mech-hit
    target-mech-hit-ground
    target-mech-jump
    target-mech-punch
    target-mech-shield
    target-mech-stance
    (target-mech-start handle float symbol)
    target-mech-walk
    target-pilot-clone-anim
    target-pilot-daxter-perch
    target-pilot-death
    (target-pilot-edge-grab pilot-edge-grab-info)
    target-pilot-get-off
    target-pilot-get-on
    target-pilot-grab
    target-pilot-hit
    target-pilot-impact
    target-pilot-stance
    (target-pilot-start handle symbol symbol)
    (target-play-anim string handle)
    (target-pole-cycle handle)
    (target-pole-flip-forward float float float)
    (target-pole-flip-forward-jump float float)
    (target-pole-flip-up float float float)
    (target-pole-flip-up-jump float float)
    target-powerjak-get-on
    (target-racing-start handle)
    target-roll
    (target-roll-flip float float)
    target-running-attack
    target-slide-down
    target-slide-down-to-ground
    target-stance
    target-stance-ambient
    target-stance-look-around
    target-startup
    target-swim
    target-swim-down
    (target-swim-jump float float)
    (target-swim-jump-jump float float surface)
    target-swim-stance
    target-swim-up
    target-swim-walk
    target-title
    target-tube
    (target-tube-start handle)
    target-turn-around
    target-turret-get-off
    (target-turret-get-on handle)
    (target-turret-stance handle)
    target-turret-stance-fire
    target-wade-stance
    target-wade-walk
    target-walk
    target-warp-in
    target-warp-out
    target-yellow-jump-blast
    tobot-stance
    )
  )


(define-perm *target* target #f)

(deftype sidekick (process-drawable)
  ((parent               (pointer target) :override)
   (control              control-info      :overlay-at root)
   (anim-seed            uint64            :offset 208)
   (shadow-in-movie?     symbol)
   (special-anim-time    time-frame)
   (special-anim-interp  float)
   (special-anim-frame   float)
   (offset               transformq        :inline)
   (mirror               (pointer process-drawable))
   (ear                  joint-mod         2)
   (flap                 joint-mod         2)
   )
  (:states
    sidekick-clone
    )
  )


(define-perm *sidekick* sidekick #f)
